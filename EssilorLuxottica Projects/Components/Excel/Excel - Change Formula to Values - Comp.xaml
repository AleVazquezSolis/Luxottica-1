<Activity mc:Ignorable="sap sap2010" x:Class="Main" this:Main.in_StrSheetName="Data" this:Main.in_StrWorkbookFileName="Vendor Open Items Summaryb.xlsx" this:Main.in_StrWorkbookFilePath="\\LRRBTUIPFSP100\Profiles\UIPATH_27\Desktop\GitHub\Luxottica\EssilorLuxottica Projects\LUX - 01 - Edit Vendor Open Items Summary\Data\summary" this:Main.in_IntDefaultDelay="500" this:Main.in_StrNewSheet="Sheet1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:bes="clr-namespace:BalaReva.Excel.Sheets;assembly=BalaReva.Excel" xmlns:bew="clr-namespace:BalaReva.Excel.WorkBook;assembly=BalaReva.Excel" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_StrSheetName" Type="InArgument(x:String)" />
    <x:Property Name="in_StrWorkbookFileName" Type="InArgument(x:String)" />
    <x:Property Name="in_StrWorkbookFilePath" Type="InArgument(x:String)" />
    <x:Property Name="in_StrWorkbookPassword" Type="InArgument(x:String)" />
    <x:Property Name="in_IntDefaultDelay" Type="InArgument(x:Int32)" />
    <x:Property Name="in_IntDefaultTimeoutS" Type="InArgument(x:Int32)" />
    <x:Property Name="in_IntDefaultTimeoutM" Type="InArgument(x:Int32)" />
    <x:Property Name="in_IntDefaultTimeoutL" Type="InArgument(x:Int32)" />
    <x:Property Name="in_StrNewSheet" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>645,4942</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Main_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Core.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Cryptography</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Logic Component" sap:VirtualizedContainerService.HintSize="605,4862" sap2010:WorkflowViewState.IdRef="Sequence_9">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Default="Excel - Change Formula to Values" Name="strComponentName" />
      <Variable x:TypeArguments="x:String" Name="strSheetName" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:Comment sap:VirtualizedContainerService.HintSize="583,324" sap2010:WorkflowViewState.IdRef="Comment_1" Text="Summary:  &#xA;&#xA;* Extract data from a single sheet within a given Workbook, factoring in password protection if required. &#xA;&#xA;Pre condition:&#xA;&#xA;* Check for existence of the required Workbook, if not found, throw AE. &#xA;&#xA;Post condition:&#xA;&#xA;* Checks the output datatable is initialised" />
    <ui:LogMessage DisplayName="Log Message - Start Log" sap:VirtualizedContainerService.HintSize="583,93" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;Starting sequence &quot; + strComponentName]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:LogMessage>
    <Sequence DisplayName="Excel - Change Formula to Values" sap:VirtualizedContainerService.HintSize="583,4108" sap2010:WorkflowViewState.IdRef="Sequence_8">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Pre Condition Check" sap:VirtualizedContainerService.HintSize="561,1479" sap2010:WorkflowViewState.IdRef="Sequence_5">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:Boolean" Name="boolPreConditionMet" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If Condition="[String.IsNullOrWhiteSpace(in_StrSheetName) = True]" DisplayName="If in_StrSheetName Is Null Or WhiteSpace" sap:VirtualizedContainerService.HintSize="539,243" sap2010:WorkflowViewState.IdRef="If_1">
          <If.Then>
            <Throw DisplayName="Throw AE " Exception="[New Exception(&quot;Incoming Argument in_StrSheetName Is Not Initialised Or Not Populated&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_1" />
          </If.Then>
          <If.Else>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="314,93" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Trace" Message="[&quot;Incoming Argument in_StrSheetName (Ref: &quot; &amp; in_StrSheetName &amp; &quot;) Is Not Null And Is Populated&quot;]" />
          </If.Else>
        </If>
        <If Condition="[String.IsNullOrWhiteSpace(in_StrWorkbookFileName) = True]" DisplayName="If in_StrWorkbookFileName Is Null Or WhiteSpace" sap:VirtualizedContainerService.HintSize="539,243" sap2010:WorkflowViewState.IdRef="If_3">
          <If.Then>
            <Throw DisplayName="Throw AE " Exception="[New Exception(&quot;Incoming Argument in_StrWorkbookFileName Is Not Initialised Or Not Populated&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_3" />
          </If.Then>
          <If.Else>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="314,93" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Trace" Message="[&quot;Incoming Argument in_StrWorkbookFileName (Ref: &quot; &amp; in_StrWorkbookFileName &amp; &quot;) Is Not Null And Is Populated&quot;]" />
          </If.Else>
        </If>
        <If Condition="[String.IsNullOrWhiteSpace(in_StrWorkbookFilePath) = True]" DisplayName="If in_StrWorkbookFilePath Is Null Or WhiteSpace" sap:VirtualizedContainerService.HintSize="539,243" sap2010:WorkflowViewState.IdRef="If_4">
          <If.Then>
            <Throw DisplayName="Throw AE " Exception="[New Exception(&quot;Incoming Argument in_sStrWorkbookFilePath  Is Not Initialised Or Not Populated&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_4" />
          </If.Then>
          <If.Else>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="314,93" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Trace" Message="[&quot;Incoming Argument in_StrWorkbookFilePath (Ref: &quot; &amp; in_StrWorkbookFilePath  &amp; &quot;) Is Not Null And Is Populated&quot;]" />
          </If.Else>
        </If>
        <ui:PathExists DisplayName="Path Exists (in_StrWorkbookFilePath, in_StrWorkbookFileName)" Exists="[boolPreConditionMet]" sap:VirtualizedContainerService.HintSize="539,90" sap2010:WorkflowViewState.IdRef="PathExists_1" Path="[Path.Combine(in_StrWorkbookFilePath, in_StrWorkbookFileName)]" PathType="File" />
        <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="539,93" sap2010:WorkflowViewState.IdRef="LogMessage_13" Level="Trace" Message="[Path.Combine(in_StrWorkbookFilePath, in_StrWorkbookFileName).ToString]" />
        <If Condition="[boolPreConditionMet = False]" DisplayName="If Pre Condition is False" sap:VirtualizedContainerService.HintSize="539,243" sap2010:WorkflowViewState.IdRef="If_5">
          <If.Then>
            <Throw DisplayName="Throw PreCondition EXC" Exception="[new Exception(&quot;Pre-Condition Failed, Provided Workbook Does Not Exist At The Given Path&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_5" />
          </If.Then>
          <If.Else>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="314,93" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Trace" Message="[&quot;Pre-Condition Successful, Provided Workbook Exists At The Given Path&quot;]" />
          </If.Else>
        </If>
      </Sequence>
      <Sequence DisplayName="Perform Sequence Actions" sap:VirtualizedContainerService.HintSize="561,2246" sap2010:WorkflowViewState.IdRef="Sequence_6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <bew:AddSheet ExecutionResult="{x:Null}" FilePassword="{x:Null}" ModifyPassword="{x:Null}" ContinueOnError="False" Delay="3" DisplayName="Add Sheet" FilePath="[Path.Combine(in_StrWorkbookFilePath, in_StrWorkbookFileName).ToString]" sap:VirtualizedContainerService.HintSize="442,70" sap2010:WorkflowViewState.IdRef="AddSheet_1" SheetName="[in_StrNewSheet]" />
        <Delay Duration="00:00:01" sap:VirtualizedContainerService.HintSize="442,22" sap2010:WorkflowViewState.IdRef="Delay_1" />
        <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="442,1730" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_4" WorkbookPath="[Path.Combine(in_StrWorkbookFilePath, in_StrWorkbookFileName).ToString]">
          <ui:ExcelApplicationScope.Body>
            <ActivityAction x:TypeArguments="ui:WorkbookApplication">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="336,1621" sap2010:WorkflowViewState.IdRef="Sequence_10">
                <Sequence.Variables>
                  <Variable x:TypeArguments="ui:GenericValue" Name="StrNewSheet" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="314,60" sap2010:WorkflowViewState.IdRef="Assign_1">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[in_StrSheetName]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:Click ClickType="CLICK_SINGLE" DelayBefore="[in_IntDefaultDelay]" DelayMS="[in_IntDefaultDelay]" DisplayName="Click sheet" sap:VirtualizedContainerService.HintSize="314,106" sap2010:WorkflowViewState.IdRef="Click_1" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition Position="Center">
                      <ui:CursorPosition.OffsetX>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:CursorPosition.OffsetX>
                      <ui:CursorPosition.OffsetY>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:CursorPosition.OffsetY>
                    </ui:CursorPosition>
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="46fac0b0568fceb86471926f8d476e44" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' /&gt;&lt;wnd cls='EXCEL7' /&gt;&lt;ctrl name='Sheet Tabs' role='page tab list' /&gt;&lt;ctrl name='{{strSheetName}}' role='page tab' /&gt;" WaitForReady="INTERACTIVE" />
                  </ui:Click.Target>
                </ui:Click>
                <ui:SendHotkey DelayBetweenKeys="{x:Null}" Activate="True" ClickBeforeTyping="False" DelayBefore="[in_IntDefaultDelay]" DelayMS="[in_IntDefaultDelay]" DisplayName="Select All" EmptyField="False" sap:VirtualizedContainerService.HintSize="314,117" sap2010:WorkflowViewState.IdRef="SendHotkey_1" Key="a" KeyModifiers="Ctrl" SendWindowMessages="False" SpecialKey="False">
                  <ui:SendHotkey.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' omit:title='Vendor Open Items Summaryb - Excel' /&gt;&lt;wnd cls='EXCEL7' omit:title='Vendor Open Items Summaryb' /&gt;" WaitForReady="COMPLETE" />
                  </ui:SendHotkey.Target>
                </ui:SendHotkey>
                <ui:SendHotkey DelayBetweenKeys="{x:Null}" Activate="True" ClickBeforeTyping="False" DelayBefore="[in_IntDefaultDelay]" DelayMS="[in_IntDefaultDelay]" DisplayName="Remove Filters" EmptyField="False" sap:VirtualizedContainerService.HintSize="314,117" sap2010:WorkflowViewState.IdRef="SendHotkey_2" Key="l" KeyModifiers="Ctrl, Shift" SendWindowMessages="False" SpecialKey="False">
                  <ui:SendHotkey.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' omit:title='Vendor Open Items Summaryb - Excel' /&gt;&lt;wnd cls='EXCEL7' omit:title='Vendor Open Items Summaryb' /&gt;" WaitForReady="COMPLETE" />
                  </ui:SendHotkey.Target>
                </ui:SendHotkey>
                <ui:SendHotkey DelayBetweenKeys="{x:Null}" Activate="True" ClickBeforeTyping="False" DelayBefore="[in_IntDefaultDelay]" DelayMS="[in_IntDefaultDelay]" DisplayName="Select All" EmptyField="False" sap:VirtualizedContainerService.HintSize="314,117" sap2010:WorkflowViewState.IdRef="SendHotkey_3" Key="a" KeyModifiers="Ctrl" SendWindowMessages="False" SpecialKey="False">
                  <ui:SendHotkey.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' omit:title='Vendor Open Items Summaryb - Excel' /&gt;&lt;wnd cls='EXCEL7' omit:title='Vendor Open Items Summaryb' /&gt;" WaitForReady="COMPLETE" />
                  </ui:SendHotkey.Target>
                </ui:SendHotkey>
                <ui:SendHotkey DelayBetweenKeys="{x:Null}" Activate="True" ClickBeforeTyping="False" DelayBefore="[in_IntDefaultDelay]" DelayMS="[in_IntDefaultDelay]" DisplayName="copy" EmptyField="False" sap:VirtualizedContainerService.HintSize="314,117" sap2010:WorkflowViewState.IdRef="SendHotkey_4" Key="c" KeyModifiers="Ctrl" SendWindowMessages="False" SpecialKey="False">
                  <ui:SendHotkey.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' omit:title='Vendor Open Items Summaryb - Excel' /&gt;&lt;wnd cls='EXCEL7' omit:title='Vendor Open Items Summaryb' /&gt;" WaitForReady="COMPLETE" />
                  </ui:SendHotkey.Target>
                </ui:SendHotkey>
                <Assign sap:VirtualizedContainerService.HintSize="314,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                  <Assign.To>
                    <OutArgument x:TypeArguments="ui:GenericValue">[StrNewSheet]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="ui:GenericValue">[in_StrNewSheet]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:Click ClickType="CLICK_SINGLE" DelayBefore="[in_IntDefaultDelay]" DelayMS="[in_IntDefaultDelay]" DisplayName="Click sheet" sap:VirtualizedContainerService.HintSize="314,106" sap2010:WorkflowViewState.IdRef="Click_2" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition Position="Center">
                      <ui:CursorPosition.OffsetX>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:CursorPosition.OffsetX>
                      <ui:CursorPosition.OffsetY>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:CursorPosition.OffsetY>
                    </ui:CursorPosition>
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="46fac0b0568fceb86471926f8d476e44" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' /&gt;&lt;wnd cls='EXCEL7' /&gt;&lt;ctrl name='Sheet Tabs' role='page tab list' /&gt;&lt;ctrl name='{{StrNewSheet}}' role='page tab' /&gt;" WaitForReady="INTERACTIVE" />
                  </ui:Click.Target>
                </ui:Click>
                <ui:TypeInto DelayBetweenKeys="{x:Null}" Activate="True" ClickBeforeTyping="False" DelayBefore="[in_IntDefaultDelay]" DelayMS="[in_IntDefaultDelay]" DisplayName="Paste" EmptyField="False" sap:VirtualizedContainerService.HintSize="314,96" sap2010:WorkflowViewState.IdRef="TypeInto_1" SendWindowMessages="False" SimulateType="False" Text="[&quot;[d(shift)]&quot;+&quot;[k(f10)]v&quot;+&quot;[u(shift)]&quot;]">
                  <ui:TypeInto.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' omit:title='Vendor Open Items Summaryb - Excel' /&gt;&lt;wnd cls='EXCEL7' omit:title='Vendor Open Items Summaryb' /&gt;" WaitForReady="INTERACTIVE" />
                  </ui:TypeInto.Target>
                </ui:TypeInto>
                <Delay Duration="00:00:05" sap:VirtualizedContainerService.HintSize="314,22" sap2010:WorkflowViewState.IdRef="Delay_2" />
                <ui:SendHotkey DelayBetweenKeys="{x:Null}" Activate="True" ClickBeforeTyping="False" DelayBefore="[in_IntDefaultDelay]" DelayMS="[in_IntDefaultDelay]" DisplayName="Save" EmptyField="False" sap:VirtualizedContainerService.HintSize="314,117" sap2010:WorkflowViewState.IdRef="SendHotkey_5" Key="s" KeyModifiers="Ctrl" SendWindowMessages="False" SpecialKey="False">
                  <ui:SendHotkey.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' omit:title='Vendor Open Items Summaryb - Excel' /&gt;&lt;wnd cls='EXCEL7' omit:title='Vendor Open Items Summaryb' /&gt;" WaitForReady="COMPLETE" />
                  </ui:SendHotkey.Target>
                </ui:SendHotkey>
                <Delay Duration="00:00:05" sap:VirtualizedContainerService.HintSize="314,22" sap2010:WorkflowViewState.IdRef="Delay_3" />
              </Sequence>
            </ActivityAction>
          </ui:ExcelApplicationScope.Body>
        </ui:ExcelApplicationScope>
        <bes:DeleteSheet ExecutionResult="{x:Null}" FilePassword="{x:Null}" ModifyPassword="{x:Null}" ContinueOnError="False" Delay="3" DisplayName="Delete Sheet" FilePath="[Path.Combine(in_StrWorkbookFilePath, in_StrWorkbookFileName).ToString]" sap:VirtualizedContainerService.HintSize="442,70" sap2010:WorkflowViewState.IdRef="DeleteSheet_1" SheetName="[in_StrSheetName]" />
        <bew:RenameSheet ExecutionResult="{x:Null}" FilePassword="{x:Null}" ModifyPassword="{x:Null}" ContinueOnError="False" Delay="3" DisplayName="Rename Work Sheet" FilePath="[Path.Combine(in_StrWorkbookFilePath, in_StrWorkbookFileName).ToString]" sap:VirtualizedContainerService.HintSize="442,70" sap2010:WorkflowViewState.IdRef="RenameSheet_1" NewSheetName="[in_StrSheetName]" SheetName="[in_StrNewSheet]" />
      </Sequence>
      <Sequence DisplayName="Post Condition Check" sap:VirtualizedContainerService.HintSize="561,179" sap2010:WorkflowViewState.IdRef="Sequence_7">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:Comment sap:VirtualizedContainerService.HintSize="314,55" sap2010:WorkflowViewState.IdRef="Comment_2" Text="//Post condition cheek does not apply" />
      </Sequence>
    </Sequence>
    <ui:LogMessage DisplayName="Log Message - End Log" sap:VirtualizedContainerService.HintSize="583,93" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;Ending sequence &quot; + strComponentName]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:LogMessage>
  </Sequence>
</Activity>